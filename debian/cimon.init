#! /bin/sh
#
#		Written by Miquel van Smoorenburg <miquels@cistron.nl>.
#		Modified for Debian
#		by Ian Murdock <imurdock@gnu.ai.mit.edu>.
#		Further changes by Javier Fernandez-Sanguino <jfs@debian.org>
#		Modified for Cimon by Daniel Milde <info@milde.cz>
#

PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
DAEMON=/usr/sbin/cimond
DAEMON_OPTS=""
NAME=cimon
LABEL=Cimon
DESC=cimon

test -x $DAEMON || exit 0

LOGDIR=/var/log/cimon
PIDFILE=/var/run/$NAME.pid
DODTIME=1

# Include mimon defaults if available
if [ -f /etc/default/cimon ] ; then
    . /etc/default/cimon
fi

set -e

running_pid()
{
    # Check if a given process pid's cmdline matches a given name
    pid=$1
    name=$2
    [ -z "$pid" ] && return 1
    [ ! -d /proc/$pid ] &&  return 1
    cmd=`cat /proc/$pid/cmdline | tr "\000" "\n"|head -n 1 |cut -d : -f 1`
    # Is this the expected child?
    [ "$cmd" != "$DAEMON" ] &&  return 1
    return 0
}

running()
{
    # No pidfile, probably no daemon present
    [ ! -f "$PIDFILE" ] && return 1
    # Obtain the pid and check it against the binary name
    pid=`cat $PIDFILE`
    running_pid $pid $DAEMON || return 1
    return 0
}

force_stop() {
    [ ! -f "$PIDFILE" ] && echo "Not running" && return
    if running ; then
        kill -15 $pid
        # Is it really dead?
        [ -n "$DODTIME" ] && sleep "$DODTIME"s
        if running ; then
            kill -9 $pid
            [ -n "$DODTIME" ] && sleep "$DODTIME"s
            if running ; then
                echo "Cannot kill $LABEL (pid=$pid)!"
                exit 1
            fi
        fi
    else
        echo "Not running"
        rm "$PIDFILE"
    fi
    rm -f $PIDFILE
    return 0
}

case "$1" in
  start)
        echo -n "Starting $DESC: "
        if ! running ; then
            [ -f "$PIDFILE" ] && rm "$PIDFILE"  #remove orphaned file
        fi
        start-stop-daemon --start --make-pidfile --background \
                          --pidfile $PIDFILE  --exec $DAEMON -- $DAEMON_OPTS
        if ! running ; then
            echo "ERROR"
        else
            echo "$NAME."
        fi
        ;;
  stop)
        echo -n "Stopping $DESC: "
        if ! running ; then
            echo "Not running"
            [ -f "$PIDFILE" ] && rm "$PIDFILE"  #remove orphaned file
        else
            start-stop-daemon --stop --quiet --oknodo --pidfile $PIDFILE
            rm "$PIDFILE" 
            echo "$NAME."
        fi
        ;;
  force-stop)
        echo -n "Forcefully stopping $DESC: "
        force_stop
        if running ; then
            echo " ERROR"
        fi
        ;;
  force-reload)
        start-stop-daemon --stop --test --quiet --pidfile \
            /var/run/$NAME.pid --exec $DAEMON \
            && $0 restart \
            || exit 0
        ;;
  restart)
    echo -n "Restarting $DESC: "
        start-stop-daemon --stop --oknodo --quiet --pidfile \
            /var/run/$NAME.pid
        [ -n "$DODTIME" ] && sleep $DODTIME
        start-stop-daemon --start --make-pidfile --background \
                          --pidfile $PIDFILE  --exec $DAEMON -- $DAEMON_OPTS
        echo "$NAME."
        ;;
  status)
    echo -n "$LABEL is "
    if running ;  then
        echo "running"
    else
        echo "not running."
        exit 1
    fi
    ;;
  *)
    N=/etc/init.d/$NAME
    echo "Usage: $N {start|stop|restart|force-reload|status|force-stop}" >&2
    exit 1
    ;;
esac

exit 0
