#!/bin/bash

PACKAGE_NAME='cimon'
PACKAGE_VERSION='0.1'

CC=gcc
CFLAGS="-Wall -pedantic -g -std=gnu99"
LDFLAGS="-lrrd_th"
MAKEFLAGS=
debug_mode=

srcdir=.
prefix=/usr
datadir=/var/lib/cimon
sbindir=/usr/sbin

header_files=('rrd.h' 'pthread.h')
libs=('rrd_th')

usage () {
	cat <<EOF
\`configure' configures Cimon to adapt to many kinds of systems.

Usage: $0 [OPTION]... [VAR=VALUE]...

To assign environment variables (e.g., CC, CFLAGS...), specify them as
VAR=VALUE.  See below for descriptions of some of the useful variables.

Defaults for the options are specified in brackets.

Configuration:
  -h, --help              display this help and exit
  -V, --version           display version information and exit
      --srcdir=DIR        find the sources in DIR [configure dir or \`..']

Application behavior:
      --debug             enable debug mode

Installation directories:
  --prefix=PREFIX         install architecture-independent files in PREFIX
                          [$prefix]

By default, \`make install' will install all the files in
\`$prefix/sbin', \`$prefix/lib' etc.  You can specify
an installation prefix other than \`$prefix' using \`--prefix',
for instance \`--prefix=\$HOME'.

For better control, use the options below.

Fine tuning of the installation directories:
  --sbindir=DIR           system admin executables [EPREFIX/sbin]
  --datadir=DIR           read-only architecture-independent data [DATAROOTDIR]
EOF
}

version () {
	echo $PACKAGE_NAME $PACKAGE_VERSION
	exit 0
}

dashdash=
for option
do
	if test -n "$prev"; then
		eval $prev=\$option
		prev=
		continue
	fi
	
	case $option in
		*=*)	optarg=`expr "X$option" : '[^=]*=\(.*\)'` ;;
		*)	optarg=yes ;;
	esac
	
	case $dashdash$option in
	--)
		dashdash=yes
		;;
	
	-help | -h | --help)
		usage; break;;
	
	-version | -V | --version)
		version; break;;
	
	-srcdir | --srcdir)
		prev=srcdir ;;
	-srcdir=* | --srcdir=*)
		srcdir=$optarg ;;
		
	-prefix | --prefix)
		prev=prefix ;;
	-prefix=* | --prefix=*)
		prefix=$optarg ;;
	
	-datadir | --datadir)
		prev=datadir ;;
	-datadir=* | --datadir=*)
		datadir=$optarg ;;
	
	-sbindir | --sbindir)
		prev=sbindir ;;
	-sbindir=* | --sbindir=*)
		sbindir=$optarg ;;
		
	-sbindir | --sbindir)
		prev=sbindir ;;
	-sbindir=* | --sbindir=*)
		sbindir=$optarg ;;
	
	CC | -CC | --CC)
		prev=CC ;;
	CC=* | -CC=* | --CC=*)
		CC=$optarg ;;
	
	CFLAGS | -CFLAGS | --CFLAGS)
		prev=CFLAGS ;;
	CFLAGS=* | -CFLAGS=* | --CFLAGS=*)
		CFLAGS=$optarg ;;
	
	LDFLAGS | -LDFLAGS | --LDFLAGS)
		prev=LDFLAGS ;;
	LDFLAGS=* | -LDFLAGS=* | --LDFLAGS=*)
		LDFLAGS=$optarg ;;
	
	debug | -debug | --debug)
		debug_mode=yes ;;
	
	esac
done

#
# Check header files
#
echo "Checking header files"
for name in ${header_files[*]}
do
	if [ -f "$prefix/include/$name" ]; then
		echo "	Header file $name found"
	else
		echo "	Header file $name not found ($prefix/include/$name)"
		exit 1
	fi
done

#
# Check libs
#
echo "Checking libraries"
for name in ${libs[*]}
do
	if [ -f "$prefix/lib/lib${name}.so" ]; then
		echo "	Library $name found"
	else
		echo "	Library $name not found ($prefix/lib/lib${name}.so)"
		exit 1
	fi
done

#
#        Generate config.h
#
echo "Generating config.h"

echo "/* Automacically generated by configure script */
#ifndef CONFIG_H
#define CONFIG_H

#define DATA_DIR \"$datadir\"" > config.h
if test "$debug_mode" = yes; then
	echo "#define DEBUG_MODE" >> config.h
else
	echo "#undef DEBUG_MODE" >> config.h
fi 
echo "" >> config.h
echo "#endif /* config.h */" >> config.h




echo "Generating Makefile"

echo "CC		=	$CC
CFLAGS	=	$CFLAGS
LDFLAGS	=	$LDFLAGS
prefix	=	$prefix
sbindir	=	$sbindir
srcdir	=	$srcdir
datadir	=	$datadir" > Makefile

echo '
default: cimond cimon-graph cimon-web

cimond: $(srcdir)/cimond.o $(srcdir)/memory.o $(srcdir)/cpu.o $(srcdir)/net.o $(srcdir)/log.o $(srcdir)/rrd.o $(srcdir)/utils.o
	$(CC) $(CFLAGS) $(LDFLAGS) -o $@ $?

cimon-graph: $(srcdir)/cimon-graph.o $(srcdir)/memory.o $(srcdir)/cpu.o $(srcdir)/net.o $(srcdir)/log.o $(srcdir)/rrd.o $(srcdir)/utils.o
	$(CC) $(CFLAGS) $(LDFLAGS) -o $@ $?

cimon-web: $(srcdir)/cimon-web.o $(srcdir)/memory.o $(srcdir)/cpu.o $(srcdir)/net.o $(srcdir)/log.o $(srcdir)/rrd.o $(srcdir)/utils.o $(srcdir)/render-index.o $(srcdir)/cache.o
	$(CC) $(CFLAGS) $(LDFLAGS) -o $@ $?

%.o: %.c %.h
	$(CC) $(CFLAGS) -c -o $@ $<

clean:
	rm -f cimond cimon-graph cimon-web $(srcdir)/*.o
	
install:
	install -Dm744 cimond $(prefix)$(sbindir)/cimond
	install -Dm744 cimon-graph $(prefix)$(sbindir)/cimon-graph
	install -Dm744 cimon-web $(prefix)$(sbindir)/cimon-web
	install -d $(prefix)$(datadir)' >> Makefile
